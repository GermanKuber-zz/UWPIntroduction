<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ReadApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="using:Common"
    xmlns:viewModels="using:Common.ViewModels"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Behavior="using:ReadApp.Behavior"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    x:Class="ReadApp.Views.MainPage"
    mc:Ignorable="d" RequestedTheme="{Binding Configurations.Theme, Mode=TwoWay}" Background="#FF434343" NavigationCacheMode="Enabled">

    <Page.Resources>
        <DataTemplate x:Key="RememberModelTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Name, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <TextBlock Text="{Binding Last, Mode=OneWay}" Margin="15,0,0,0"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ReadNoticeTemplate">
            <StackPanel BorderThickness="0">
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal" UseLayoutRounding="False">
                    <StackPanel>
                        <Ellipse x:Name="Image" Height="150" Stroke="Black" Width="150" VerticalAlignment="Top" d:LayoutOverrides="TopPosition, BottomPosition" Margin="15,10,15,15">
                            <Ellipse.Fill>
                                <ImageBrush Stretch="Fill" ImageSource="{Binding Image}"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock x:Name="Title" Text="{Binding Title}" VerticalAlignment="Top" Margin="5,25,0,0" FontSize="21" FontWeight="Bold"/>
                        <TextBlock x:Name="Date" Text="{Binding Date}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,5,0,0" FontSize="12" Foreground="#FFF10E0E"/>
                        <Grid x:Name="_10" BorderThickness="0" Margin="0" Padding="0,8,0,0" MinWidth="450" Width="650" MaxWidth="650">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="17*" />
                                <ColumnDefinition Width="113*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" x:Name="Text" TextWrapping="Wrap" Text="{Binding Text}" HorizontalAlignment="Left" MinWidth="2"  Margin="0,18,0,0" Grid.ColumnSpan="2" Height="59.854" VerticalAlignment="Top"/>
                        </Grid>
                        <Grid Height="50">
                            <AppBarButton Click="Button_OnClick" x:Name="btnEmail" Content="Button" Icon="Mail" Height="54" HorizontalAlignment="Right" Margin="0,0,102,-4" Label="Email" Style="{StaticResource AppBarButtonStyle1}" FontSize="19" Visibility="{Binding EmailVisibility, Mode=OneWay}"/>
                            <AppBarButton  
                                Command="{Binding DataContext.AddNoticeToCommand, ElementName=GridContext}"
                                CommandParameter="{Binding}"   
                                x:Name="btnCalendar" Content="Button" Icon="Calendar" Height="50" HorizontalAlignment="Right" Visibility="{Binding EmailVisibility, Mode=OneWay}"/>

                        </Grid>
                    </StackPanel>

                </StackPanel>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>
    <Page.DataContext>
        <viewModels:MainPageDataViewModel />
    </Page.DataContext>
    <Page.BottomAppBar>
        <CommandBar x:Name="commandBar" Margin="0,17,0,0" RenderTransformOrigin="0.5,0.5" >
            <CommandBar.RenderTransform>
                <CompositeTransform TranslateY="45"/>
            </CommandBar.RenderTransform>
            <!--<CommandBar.Projection>
                <PlaneProjection GlobalOffsetY="45"/>
            </CommandBar.Projection>-->
            <CommandBar.SecondaryCommands>
                <AppBarToggleButton x:Name="appBarToggleButton" Label="Notificaciones" IsChecked="{Binding Configurations.NotificationsEnabled, Mode=TwoWay}" DataContext="{Binding}"/>
                <AppBarToggleButton x:Name="appBarToggleButton1" Label="Live" IsChecked="{Binding Configurations.LiveTileEnabled, Mode=TwoWay}" DataContext="{Binding}"/>
                <AppBarToggleButton x:Name="appBarToggleButton2" Label="Dark Theme" IsChecked="{Binding Configurations.DarkTheme, Mode=TwoWay}" DataContext="{Binding}"/>
                <AppBarSeparator/>
                <AppBarButton x:Name="appBarButton" Label="About" Click="appBarButton_Click"/>

            </CommandBar.SecondaryCommands>
            <CommandBar.Content>
                <Grid/>
            </CommandBar.Content>
        </CommandBar>
    </Page.BottomAppBar>



    <Grid x:Name="GridContext" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Interactivity:Interaction.Behaviors>
            <Core:EventTriggerBehavior>
                <Core:GoToStateAction StateName="Loading"/>
            </Core:EventTriggerBehavior>
        </Interactivity:Interaction.Behaviors>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LoadingState">
                <VisualState x:Name="Loading">
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Loaded">
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:1" To="-550" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.GlobalOffsetY)" Storyboard.TargetName="textBlock1" d:IsOptimized="True">
                            <DoubleAnimation.EasingFunction>
                                <BackEase Amplitude="0.2" EasingMode="EaseIn"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Duration="0:0:0.494" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ProgressBar.IsIndeterminate)" Storyboard.TargetName="progressBar">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.494">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0:0:1" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0:0:1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.ZIndex)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>0</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0:0:1" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="commandBar" d:IsOptimized="True">
                            <DoubleAnimation.EasingFunction>
                                <CircleEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Error">
                    <VisualState.Setters>
                        <Setter Target="textBlock1.(TextBlock.FontWeight)">
                            <Setter.Value>
                                <FontWeight>Bold</FontWeight>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="textBlock1.(TextBlock.Text)" Value="Ocurrio un Error!!"/>
                    </VisualState.Setters>
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                        <ColorAnimation Duration="0" To="#FF931616" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock1" d:IsOptimized="True"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="320"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="grid" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" Grid.ColumnSpan="2" Background="#FF2E2E2E" Opacity="0.9" Canvas.ZIndex="1">
            <StackPanel x:Name="stackPanel" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center">
                <TextBlock x:Name="textBlock1" Style="{StaticResource HeaderTextBlockStyle}" TextWrapping="Wrap" Text="Cargando ...">
                    <TextBlock.Projection>
                        <PlaneProjection/>
                    </TextBlock.Projection>
                </TextBlock>
                <ProgressBar x:Name="progressBar" Height="10" VerticalAlignment="Stretch" IsIndeterminate="True" Margin="0,8,0,0" FontSize="22"/>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListView x:Name="listView" ItemTemplate="{StaticResource RememberModelTemplate}"  ItemsSource="{Binding ReadModels}" Grid.Row="1" SelectedItem="{Binding SelectedRead, Mode=TwoWay}">
                <Interactivity:Interaction.Behaviors>
                    <Behavior:AutoScrollBehavior/>
                </Interactivity:Interaction.Behaviors>
            </ListView>
            <TextBox x:Name="textBox" Margin="10,10,10,8" TextWrapping="Wrap" Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:LayoutOverrides="Height" PlaceholderText="Search for names"/>
        </Grid>
        <Grid Grid.Column="1" BorderBrush="#FF1B1212">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="13*"/>

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="textBlock" HorizontalAlignment="Left" TextWrapping="Wrap" 
             Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Margin="5,5,0,0" FontSize="20" Foreground="#FF0F5AC5"/>
            <Ellipse Grid.Column="1" x:Name="Imangen" Margin="0,5,11,0" Stroke="Black" d:LayoutOverrides="TopPosition, BottomPosition" HorizontalAlignment="Right" Width="45" Height="45" MaxWidth="45" MaxHeight="45">
                <Ellipse.Fill>
                    <ImageBrush Stretch="Fill" ImageSource="{Binding SelectedRead.Picture}"/>
                </Ellipse.Fill>
            </Ellipse>
            <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2" Margin="0,-0.333,0,0" d:LayoutOverrides="TopPosition, BottomPosition">
                <ItemsControl ItemTemplate="{StaticResource ReadNoticeTemplate}" ItemsSource="{Binding SelectedRead.Notices}"/>
            </ScrollViewer>
        </Grid>

    </Grid>
</Page>
